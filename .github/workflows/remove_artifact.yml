name: Delete Artifacts by Date and Repo

on:
  workflow_dispatch:
    inputs:
      target_repo:
        description: 'The repository (owner/repo) whose artifacts you want to delete'
        required: true
        type: string
      target_date:
        description: 'Delete artifacts created on this date (YYYY-MM-DD)'
        required: true
        type: string

permissions:
  contents: write

env:
  # Personal access token with repo scope or appropriate permissions for the target repo
  TARGET_REPO_PAT: ${{ secrets.PAT_TOKEN }}

jobs:
  delete_artifacts:
    name: Delete Artifacts on ${{ github.event.inputs.target_date }} from ${{ github.event.inputs.target_repo }}
    runs-on: ubuntu-latest
    steps:
      - name: Install jq if missing
        shell: bash
        run: |
          if ! command -v jq &> /dev/null; then
            echo "Installing jq…"
            apt-get update -qy
            apt-get install -qy jq
          fi

      - name: Validate inputs
        shell: bash
        run: |
          REPO="${{ github.event.inputs.target_repo }}"
          DATE="${{ github.event.inputs.target_date }}"
          if [[ -z "$REPO" ]]; then
            echo "Error: target_repo is required."
            exit 1
          fi
          if [[ ! "$REPO" =~ ^[^/]+/[^/]+$ ]]; then
            echo "Error: target_repo must be in 'owner/repo' format."
            exit 1
          fi
          if [[ -z "$DATE" ]]; then
            echo "Error: target_date is required."
            exit 1
          fi
          if [[ ! "$DATE" =~ ^[0-9]{4}-[0-9]{2}-[0-9]{2}$ ]]; then
            echo "Error: target_date must be YYYY-MM-DD."
            exit 1
          fi
          echo "Inputs validated: REPO=$REPO, DATE=$DATE"

      - name: List and delete artifacts
        shell: bash
        env:
          GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }}
          TARGET_REPO: ${{ github.event.inputs.target_repo }}
          TARGET_DATE: ${{ github.event.inputs.target_date }}
        run: |
          echo "Fetching artifacts from $TARGET_REPO created on $TARGET_DATE …"

          # Fetch all artifacts JSON
          RESPONSE=$(curl -s \
            -H "Authorization: Bearer $GITHUB_TOKEN" \
            -H "Accept: application/vnd.github.v3+json" \
            "https://api.github.com/repos/$TARGET_REPO/actions/artifacts")

          # Show raw response snippet
          echo "Raw API response (first 200 chars):"
          echo "${RESPONSE:0:200}"
          echo "…"

          # Extract artifacts created exactly on TARGET_DATE (UTC)
          ARTIFACT_IDS=$(echo "$RESPONSE" | jq -r --arg TD "$TARGET_DATE" '
            .artifacts[]
            | select(.created_at | startswith($TD))
            | .id
          ')

          if [ -z "$ARTIFACT_IDS" ]; then
            echo "No artifacts found in $TARGET_REPO with created_at = $TARGET_DATE"
            exit 0
          fi

          echo "Found artifact IDs to delete:"
          echo "$ARTIFACT_IDS"

          # Delete each artifact by ID
          echo "$ARTIFACT_IDS" | while read -r ID; do
            echo "→ Deleting artifact ID $ID"
            curl -s -X DELETE \
              -H "Authorization: Bearer $GITHUB_TOKEN" \
              -H "Accept: application/vnd.github.v3+json" \
              "https://api.github.com/repos/$TARGET_REPO/actions/artifacts/$ID"
          done

          echo "Completed deletion of artifacts created on $TARGET_DATE from $TARGET_REPO."
